@set #595=!safe no_command
-
@wipe #595
-
@set #595=safe
-
@conformat #595=
-
@desc #595=
  The following ships are available for purchase:%r%r
  [ansi(y,align(9 20 8 6,Price,Class,Size,Avail.))]%r
  [iter(
      setunion(,setr(0,iter(lvthings(%!),spacesys(class,itext(0))))),
      align(
          9 20 8 -5,
          [u(fn.price,first(setr(1,u(fn.listclass,itext(0)))))]c,
          itext(0),
          ifelse(spacesys(iscapship,first(%q1)),Capital,Fighter),
          words(%q1)
          ),
      ,%r)]%r%r

  [ansi(yh,shipyard/help)] for commands to use here.
-
&DOC.SHIP/BUY #595=[ansi(yh,ship/buy <class>=<title>)] to purchase a ship.
-
&DOC.SHIP/INSPECT #595=[ansi(yh,ship/inspect <class>)] to inspect the stats of a ship.
-
&DOC.SHIP/APPRAISE #595=[ansi(yh,ship/appraise <ship>)] to find out what a ship is worth.
-
&DOC.SHIP/SELL #595=[ansi(yh,ship/sell <ship>)] to sell a ship that you own.
-
&DOC.SHIP/COMPARE #595=[ansi(yh,ship/compare)] to list available classes in a comparison table.
-
&DOC.SHIP/STATUS #595=[ansi(yh,ship/status <ship>)] to view the stats on a ship you can fly.
-
&DOC.WEAP/LIST #595=[ansi(yh,weap/list)] to see a list of available weapons.
-
&DOC.WEAP/INSTALL #595=[ansi(yh,weap/install <ship>=<weapon>)] to install a weapon on a ship you own.
-
&DOC.WEAP/UNINSTALL #595=[ansi(yh,weap/uninstall <ship>=<slot>)] to uninstall a weapon.
-
&FN.LISTCLASS #595=
  squish(iter(lvthings(%!),if(strmatch(spacesys(class,itext(0)),%0),[itext(0)]%b),,))
-
&MARKDOWN #595=.5
-
&FN.ECON.BALANCE #595=
  rpc(Econ.on_hand_balance,%0)
-
&FN.PRICE #595=
  spacesys(value,%0)
-
&FN.ECON.TRANSFER #595=
  rpc(Econ.grant,%0,%1)
-
&FN.ECON.DEPOSIT #595=
  rpc(Econ.account_deposit,%!,Shipyards,%0)
-
&FN.ECON.WITHDRAW #595=
  rpc(Econ.account_withdraw,%!,Shipyards,%0)
-
&CMD.SHIP/INSPECT #595=$ship/inspect *:
  @switch [gt(words(setr(0,u(fn.listclass,%0))),0)]=

          0,@nspemit %#=[ansi(rh,>)] No ships of that class are available for purchase.,
          1,@nspemit %#=[spacesys(status,first(%q0))]
-
&CMD.SHIP/BUY #595=$ship/buy *=*:
  @switch [t(words(setr(0,u(fn.listclass,%0))))]
          [t(gte(u(fn.econ.balance,%#),setr(3,u(fn.price,setr(2,first(%q0))))))]
          [not(hasattrval(%!,order.%#))]
          [gte(strlen(%1),5)]=

          0???,@nspemit %#=[ansi(rh,>)] No ships of that class are available for purchase.,
          10??,@nspemit %#=[ansi(rh,>)] You don't have enough credits.,
          110?,@nspemit %#=[ansi(rh,>)] You can only have one ship on order at a time.,
          1110,@nspemit %#=[ansi(rh,>)] Your ship's name must be at least 5 characters long.,
          1111,{@nspemit %#=[ansi(gh,>)] Purchasing a [capstr(%0)].  
                            It will take [ansi(yh,[timestring(setr(1,u(fn.time.purchase,%#,%q3)))] \([mul(bound(chargen(get.skill,%#,construction),0,6),10)]\% skill bonus\))] 
                            for your ship to be assembled.  You will be notified via [ansi(yh,@mail)] when your ship is ready.;
                @set %!=order.%#:%0:[add(secs(),%q1)];
                @tel %q2=[parent(%!)];
                @name %q2=[capstr(%1)];
                @set %q2=data.roster:%#:captain;
                think u(fn.econ.transfer,%#,-%q3);
                think u(fn.econ.deposit,%q3);
                think syslog(SPACE,New ship \([spacesys(class,%q2)]\) purchased by [name(%#)]\(%#\) in [name(loc(%!))]\([loc(%!)]\).);
                @wait %!/%q1={@nsremit loc(%!)=Maintenance crews carefully tow the [name(%q2)] out of a nearby construction bay.;
                              @tel/silent %q2=loc(%!);
                              @set %q2=data.docked:[loc(%!)];
                              @wipe %!/order.%#;
                              @mail %#=[name(%q2)]/Your newly purchased ship, the [name(%q2)], is ready for pickup at [name(loc(%!))] - [name(zone(loc(%!)))]!
                             }
               }
-
&FN.TIME.PURCHASE #595=
  mul(
    mul(div(%1,1000),60),
    switch(
        chargen(get.skill,%0,construction),
        1,.9,
        2,.8,
        3,.7,
        4,.6,
        5,.5,
        6,.4,
        >6,.3,
        1
        )
    )
-
&CMD.SHIP/APPRAISE #595=$ship/appraise *:
  @assert [setr(Ship,locate(%!,%0,Tn))]=@nspemit %#=[ansi(rh,>)] That ship is not here.;
  @assert [spacesys(isship,%q<Ship>)]=@nspemit %#=[ansi(rh,>)] That is not a ship.;

  @nspemit %#=[ansi(gh,>)] The [name(%q<Ship>)] is worth [mul(v(Markdown),get(%q<Ship>/value))]c.
-
&CMD.SHIP/SELL #595=$ship/sell *:
  @assert [setr(Ship,locate(%!,%0,Tn))]=@nspemit %#=[ansi(rh,>)] That ship is not here.;
  @assert [spacesys(iscaptain,%q<Ship>,%#)]=@nspemit %#=[ansi(rh,>)] You do not own the [name(%q<Ship>)].;

  think [setr(Ship.name,name(%q<Ship>))];

  @name %q<Ship>=[setr(Ship.class,spacesys(class,%q<Ship>))][inc(words(u(fn.listclass,%q<Ship.class>)))];
  think [setq(Ship.salePrice,mul(get(%q<Ship>/value),v(markdown)))];
  @tel %q<Ship>=%!;
  think u(fn.CleanShip,%q<Ship>);
  think u(fn.econ.transfer,%#,%q<Ship.salePrice>);
  think u(fn.econ.withdraw,%q<Ship.salePrice>);
  think syslog(SHIP SALE,%n sold the %q<Ship.name>\(%q<Ship.class> - %q<Ship>\) for %q<Ship.salePrice>c.);

  @nspemit %#=[ansi(gh,>)] You are paid [ansi(yh,%q<Ship.salePrice>c)] for the %q<Ship.name>.
-
&CMD.SHIP/COMPARE #595=$ship/compare:
  @nspemit %#=
    [titlebar(Ship classes for sale at [name(setr(r,room(%!)))][if(setr(z,name(zone(%qr))),%b-%b[name(zone(%qr))])])]%r
    [ansi(y,align(14 8 9 6 9 9 6 >10,Name,Scale,Speed,Cargo,Armor,Shields,#Guns,Cost))]%r
    [iter(
          setr(l,unique(sort(iter(lvthings(%!),parent(itext(0))),d))),
          align(
               14 8 9 6 9 9 6 >10,
               [get(itext(0)/space`class)],
               [ifelse(spacesys(iscapship,itext(0)),Capital,Fighter)],
               [default(itext(0)/space`maxspeed,0)],
               [default(itext(0)/space`cargo`max,0)],
               [num2adj(last(default(itext(0)/space`armor,0:0),:))],
               [num2adj(last(default(itext(0)/space`shields,0:0),:))],
               [first(default(itext(0)/space`guns,0|),|)],
               [ansi(hy,default(itext(0)/value,0))]
          ),
        ,%r)]%r
    [footerbar([words(%ql)] Classes)]
-
&FN.CLEANSHIP #595=
  if(
     spacesys(isship,%0),
     wipe(%0/data.roster)
    )
-
&CMD.SHIPYARD/HELP #595=$shipyard/help:@nspemit %#=
  [titlebar(Commands for [name(%!)])]%r
  [iter(
      lattrp(%!/DOC.SHIP/*),
      [eval(%!,itext(0))],
      ,%r
      )]%r%r

  [iter(
      lattrp(%!/DOC.WEAP/*),
      [eval(%!,itext(0))],
      ,%r
      )]%r
  [footerbar()]
-
&CMD.SHIP/STATUS #595=$ship/status *:
  @assert [setr(Ship,locate(%!,%0,Tn))]=@nspemit %#=[ansi(rh,>)] That ship is not here.;
  @assert [spacesys(iscrew,%q<Ship>,%#)]=@nspemit %#=[ansi(rh,>)] You are not a crew member on the [name(%q<Ship>)].;

  @nspemit %#=spacesys(status,%q<Ship>);
-
&CMD.WEAP/LIST #595=$weap/list:@nspemit %#=
  [titlebar([name(%!)]: Available Weapons)]%r
  [ansi(y,Price[space(5)]Weapon[space(10)]Damage%b%bRange%b%bCooldown)]%r
  [iter(
      v(list.weapons),
      [ljust(u(fn.price,itext(0)),10)]
      [ljust(name(itext(0)),18)]
      [ljust(get(itext(0)/damage),8)]
      [ljust(get(itext(0)/range),8)]
      [timestring(get(itext(0)/cooldown))],
      ,%r
      )]%r
  [footerbar()]
-
&CMD.WEAP/INSTALL #595=$weap/install *=*:
  think [setr(Ship,locate(%!,%0,Tn))];
  think [setq(Weapon,extract(v(list.weapons),match(iter(v(list.weapons),name(itext(0)),,|),%1,|),1))];
  think [setq(Ship.slots,get(%q<Ship>/space`guns))];
  think [setq(Ship.weapons,spacesys(weapons,%q<Ship>))];
  think [setq(Price,u(fn.price,%q<Weapon>))];
  think [setq(Time,u(fn.time.purchase,%#,%q<Price>))];
  think [setq(Wallet,u(fn.econ.balance,%#))];

  @assert [t(%q<Ship>)]=@nspemit %#=[ansi(rh,>)] That ship is not here.;
  @assert [spacesys(iscaptain,%q<Ship>,%#)]=@nspemit %#=[ansi(rh,>)] You do not own the [name(%q<Ship>)].;
  @assert [t(%q<Weapon>)]=@nspemit %#=[ansi(rh,>)] No such weapon is available for installation.;
  @assert [gt(sub(%q<Ship.slots>,words(%q<Ship.weapons>,|)),0)]=@nspemit %#=[ansi(rh,>)] There are no available weapon slots on the [name(%q<Ship>)].;
  @assert [gte(%q<Wallet>,%q<Price>)]=@nspemit %#=[ansi(rh,>)] You don't have enough credits.;
  @assert [not(hasattrval(%!,order.%#.weap))]=@nspemit %#=[ansi(rh,>)] You can only install one weapon at a time. [ansi(yh,timestring(sub(v(order.%#.weap),secs())))] remaining.;

  think [setq(Open,first(iter(lnum(get(%q<Ship>/space`guns),1),if(not(extract(%q<Ship.weapons>,#@,1,|)),#@))))];
  @nspemit %#=[ansi(gh,>)] Purchasing a [name(%q<Weapon>)]. 
                           It will take [ansi(yh,[timestring(%q<Time>)] \([mul(bound(chargen(get.skill,%#,construction),0,6),10)]\% skill bonus\))] 
                           for the installation to be completed.  You will be notified via [ansi(yh,@mail)] when your ship is ready.;
  think u(fn.econ.transfer,%#,-%q<Price>);
  think u(fn.econ.deposit,%q<Price>);
  @set %q<Ship>=space`lockdown:[add(secs(),%q<Time>)];
  @set %!=order.%#.weap:[add(secs(),%q<Time>)];
  @wait %!/%q<Time>={@set %q<Ship>=space`guns:[get(%q<Ship>/space`guns)];
                     @set %q<Ship>=space`guns`%q<Open>:%q<Weapon>;
                     @wipe %!/order.%#.weap;
                     @mail %#=Weapon Installation/The installation of a [name(%q<Weapon>)] on the [name(%q<Ship>)] at [name(loc(%!))] - [name(zone(loc(%!)))] is complete.
                    }
-
&CMD.WEAP/UNINSTALL #595=$weap/uninstall *=*:
  think [setr(Ship,locate(%!,%0,Tn))];
  think [setq(Ship.weapons,spacesys(weapons,%q<Ship>))];

  @assert [t(%q<Ship>)]=@nspemit %#=[ansi(rh,>)] That ship is not here.;
  @assert [spacesys(iscaptain,%q<Ship>,%#)]=@nspemit %#=[ansi(rh,>)] You do not own the [name(%q<Ship>)].;
  @assert [hasattrval(%q<Ship>,space`guns`%1)]=@nspemit %#=[ansi(rh,>)] That hardpoint does not have a gun installed.;
  
  @wipe %q<Ship>/space`guns`%1;
  @nspemit %#=[ansi(gh,>)] The [first(extract(%q<Ship.weapons>,%1,1,|),:)] installed on hardpoint %1 of the [name(%q<Ship>)] has been uninstalled.
-
