##################################
### PARENT: Command Console (#204)
##################################

# Setup the MUSH object
@set #204=!SAFE NO_COMMAND
-
@wipe #204
-
@set #204=SAFE
-
@lock/use #204=LOCK.CANUSECONSOLE/1
-
@lock/command #204=LOCK.ISMANNING/1
-
@lset #204/use=!no_inherit
-
@lset #204/command=!no_inherit
-
&COMMAND_LOCK`FAILURE #204=
  [ifelse(
    not(hasattrval(%!,data.ship)),
    [ansi(rh,WARNING:)] [trim(before(name(%!),<))] does not have a valid ship object set.,
    Huh? \(Type "help" for help.\)
    )]
-
&CMD.CON/HELP #204=$con/help:
  @nspemit %#=[titlebar(Available Console Commands)]%r
              [iter(
                  lattrp(%!/HELP.*),
                  [ansi(y,before(v(itext(0)),|))] - [after(v(itext(0)),|)],
                  ,%r)]%r
              [footerbar()]
-
&HELP.SCAN #204=
  scan|See a list of things within sensor range.
-
&HELP.LAUNCH #204=
  launch|Take off.
-
&HELP.LAND #204=
  land <contact ID>|Land on a planet or station.
-
&HELP.PLOT/CALC #204=
  plot/calc <contact ID>|Plot a course to a target.
-
&HELP.PLOT/ENGAGE #204=
  plot/engage|Engage your plotted course.
-
&HELP.PLOT/STOP #204=
  plot/stop|Stop the ship.
-
&HELP.UNMAN #204=
  unman|Stop using the console.
-
&CMD.SCAN #204=$scan:
  @switch [not(spacesys(isdocked,setr(0,v(data.ship))))]=

          0,@nspemit %#=[ansi(rh,>)] The ship is currently landed.,
          1,@nspemit %#=[spacesys(scan,%q0)]
-
@ufail #204=[pemit(%#,
  [if([spacesys(ismanned,%!)],
    /@@ Console is manned by someone else @@/
    The [name(%!)] is already being manned by [spacesys(mannedby,%!)].,
    
    /@@ Access denied @@/
    Console access denied.
  )]
)]
-
@desc #204=
  A command console. It is currently [ifelse([hasattrval(%!,data.manned)],manned by [spacesys(mannedby,%!)],unmanned)].%r
  You may [ansi(yh,man)] or [ansi(yh,use)] this console.%r
  While manning the console, [ansi(yh,con/help)].
-
&LOCK.CANUSECONSOLE #204=[spacesys(canuseconsole,v(data.ship),%#)]
-
&LOCK.ISMANNING #204=[and(spacesys(ismanning,%!,%#),hasattrval(%!,data.ship))]
-
&AUSE #204=
  @name %!=[trim(before(name(%!),<))] <[name(%#)]>;
  &data.manned %!=%#
-
&CMD.UNMAN #204=$unman:
  @name %!=[trim(before(name(%!),<))] <Unmanned>;
  @nspemit %#=You unman the [trim(before(name(%!),<))];
  @nsoemit %#=[name(%#)] unmans the [trim(before(name(%!),<))].;
  &data.manned %!;
-
&OUSE #204=
  [if(
      spacesys(isunmanned,%!),
      mans the [trim(before(name(%!),<))].
      )]
-
&USE #204=
  [ifelse(
      spacesys(ismanned,%!),
      You are already manning the [trim(before(name(%!),<))].,
      You man the [trim(before(name(%!),<))].
      )] 
-
# Command: console
# Diplay the console commands and their syntax
&CMD.CONSOLE #204=$console:[pemit(%#,
  [spacesys(console)]
)]
-
# Command: plot
# Display the plot commands and their syntax
&CMD.PLOT #204=$plot:[pemit(%#,
  [spacesys(plot)]
)]
-
# Command: roster
# Display the roster commands and their syntax
&CMD.ROSTER #204=$roster:[pemit(%#,
  [spacesys(roster)]
)]
-
&CMD.LAND #204=$land *:
  +space/land [v(data.ship)]=[extract(spacesys(update.report,v(data.ship)),%0,1)]
-
&CMD.LAUNCH #204=$launch:
  +space/launch [v(data.ship)]
-
&CMD.PLOT/CALC #204=$plot/calc *:
  @switch [spacesys(isactive,v(data.ship))]
          [not(spacesys(ismoving,v(data.ship)))]
          [t(lte(%0,words(setr(0,spacesys(update.report,v(data.ship))))))]=

          0??,@nspemit %#=[ansi(rh,>)] The ship is currently inactive.,
          10?,@nspemit %#=[ansi(rh,>)] The ship must be stopped before a new course can be calculated.,
          110,@nspemit %#=[ansi(rh,>)] Invalid contact ID.,
          111,{think [spacesys(setdest,v(data.ship),setr(1,extract(%q0,%0,1)))];
               @nspemit %#=[ansi(gh,>)] Plotting a course to [name(%q1)]...%r
                           [ansi(gh,>)] Course laid in.  Estimated time of arrival is 
                                        [ansi(yh,etimefmt($h hours $m minutes,add(stringsecs(spacesys(eta,v(data.ship))),60)))].
              }
-
&CMD.PLOT/ENGAGE #204=$plot/engage:
  +space/advance [v(data.ship)]
-
&CMD.PLOT/STOP #204=$plot/stop:
  +space/stop [v(data.ship)]
-

